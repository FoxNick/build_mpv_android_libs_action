name: 编译 mpv-android libs

on:
  repository_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    name: 编译 mpv-android libs ${{matrix.version}}
    strategy:
      fail-fast: false
      matrix:
        version: ["${{ github.event.client_payload.version }}"]

    steps:
    - name: 配置java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: temurin

    - name: 初始化环境
      run: |
        sudo apt-get update
        sudo apt-get install autoconf pkg-config libtool ninja-build meson nasm
      
    - name: 下载mpv-android源码
      run: |
        df -hT $PWD
        git clone https://github.com/mpv-android/mpv-android.git -b ${{matrix.version}} mpv-android

    - name: 下载依赖
      run: |
        cd mpv-android/buildscripts
        ./download.sh

    - name: 编译
      id: compile
      run: |
        cd mpv-android/buildscripts
        ./buildall.sh --arch armv7l mpv
        ./buildall.sh --arch arm64 mpv
        ./buildall.sh --arch x86 mpv
        ./buildall.sh --arch x86_64 mpv
        echo "status=success" >> $GITHUB_OUTPUT

    - name: SSH 连接
      uses: P3TERX/ssh2actions@main
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 组织文件
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        mkdir uploads
        cd mpv-android/app/build/outputs
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 生成 release tag
      id: tag
      if: steps.organize.outputs.status == 'success' && !cancelled()
      run: |
        release_tag="${{matrix.version}}"
        release_name="${{matrix.version}} libs"
        echo "release_tag=${release_tag}" >> $GITHUB_OUTPUT
        echo "release_name=${release_name}" >> $GITHUB_OUTPUT
        touch release.txt
        echo "mpv-android libs version ${{matrix.version}}" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: 删除相同 tag 的 releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      if: steps.tag.outputs.status == 'success' && !cancelled()
      with:
        keep_latest: 0
        delete_tags: true
        delete_tag_pattern: ${{ steps.tag.outputs.release_tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    - name: 上传至 release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
        name: ${{ steps.tag.outputs.release_name }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: uploads/*

    - name: 删除旧的 workflows
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 4

    - name: 删除旧的 releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      continue-on-error: true
      with:
        keep_latest: 20
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
